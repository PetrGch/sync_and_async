/********************************************************************/

// ЧИТАЕМ ДВЕ АСИНХРОННЫЕ ФУНКЦИИ ПАРАЛЛЕЛЬНО и ТРЕТЬЮ ПОСЛЕДОВАТЕЛЬНО
// (так же можно прочитать дву первые функции параллельно и две последующие тоже параллельно)

/**
* readFiles - функция отвечающая за последовательность выполнения асинхронных функций
* @param {Function} callback
*/

function twoOneFIles(callback) {
  var sequences = [];                           // массив функций

  function next() {                             // рекурсивная функция отвечающая
    var cb = sequences.shift();                 // за вызов функций из массива.
    if (cb) {                                   // колбэк-функция в параметре функции
      cb(next);                                 // исполняется во время обработки асинк. функции
    }
  }

  setTimeout(next, 0);                          // таймер срабатывает и вызывает рекурсию после того как все
                                                // функции были обработаны и сложены в массив

  var then = function(cb) {                     // функция отвечает за обработку колбэков
    sequences.push(cb)                          // и помещает их в массив

    return { then: then };                      // возвращает замыкание на функцию then;
  }

  return then(callback);
}

module.exports = twoOneFIles;
